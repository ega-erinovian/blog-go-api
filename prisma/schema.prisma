// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// One to Many
model User {
  id        Int     @unique @default(autoincrement())
  email     String  @unique
  username  String  @unique
  password  String
  isDeleted Boolean @default(false)
  blogs     Blog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Blog {
  id             Int            @unique @default(autoincrement())
  title          String
  description    String
  thumbnail      String
  content        String         @db.Text
  userId         Int
  user           User           @relation(fields: [userId], references: [id])
  blogCategories BlogCategory[]
  isDeleted      Boolean        @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("blogs")
}

model BlogCategory {
  id         Int      @unique @default(autoincrement())
  blogId     Int
  blogs      Blog     @relation(fields: [blogId], references: [id])
  categoryId Int
  categories Category @relation(fields: [categoryId], references: [id])

  updatedAt DateTime @updatedAt

  @@map("blog_categories")
}

model Category {
  id             Int            @unique @default(autoincrement())
  name           String
  blogCategories BlogCategory[]
  isDeleted      Boolean        @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")
}
